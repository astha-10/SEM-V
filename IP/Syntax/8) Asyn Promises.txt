1) Creating:
const myPromise = new Promise((resolve, reject) => {
  // Asynchronous operation
  let condition = true; // This is a placeholder for an actual operation (e.g., API call, timeout)

  if (condition) {
    resolve("Operation successful!"); // The promise was fulfilled
  } else {
    reject("Operation failed!"); // The promise was rejected
  }
});
-------------------------------------

2)Handling Promises using .then() and .catch()
myPromise
  .then((result) => {
    console.log(result); // Logs: "Operation successful!" if resolved
  })
  .catch((error) => {
    console.error(error); // Logs: "Operation failed!" if rejected
  });
--------------------------------------

3) Using finally()
myPromise
  .then((result) => {
    console.log(result);
  })
  .catch((error) => {
    console.error(error);
  })
  .finally(() => {
    console.log("Promise finished, cleanup if necessary.");
  });


